
//start REST OMIT

http://somesite/sendvalue?from=Dave&to=Alice&amount=100.00&for=birthday present

//end REST OMIT

//start RESTx OMIT

http://somesite/sendvalue?from=Dave&to=Alice&amount=100.00&for=birthday present&signature=1811c4c90b7b

//end RESTx OMIT


//start skeleton OMIT
pragma solidity ^0.4.10;

contract PowerToken {
	... storage declarations

	... methods & constructor
}
//end skeleton OMIT


	ownerTx, err = bind.NewTransactor(strings.NewReader(mainKey), ",3ePVWY2LnBEZYD")
	if err != nil {
		log.Printf("Failed to create authorized transactor: %v", err)
		return false
	}

//start vm OMIT

func opAdd(pc *uint64, evm *EVM, contract *Contract, memory *Memory, stack *Stack) ([]byte, error) {
	x, y := stack.pop(), stack.peek()
	math.U256(y.Add(x, y))

	evm.interpreter.intPool.put(x)
	return nil, nil
}

func opSub(pc *uint64, evm *EVM, contract *Contract, memory *Memory, stack *Stack) ([]byte, error) {
	x, y := stack.pop(), stack.peek()
	math.U256(y.Sub(x, y))

	evm.interpreter.intPool.put(x)
	return nil, nil
}

//end vm OMIT

//start op OMIT

const (
	// 0x0 range - arithmetic ops
	STOP OpCode = iota
	ADD
	MUL
	SUB
	DIV
	SDIV
	MOD
	SMOD
	ADDMOD
	MULMOD
	EXP
	SIGNEXTEND
)
//end op OMIT


